@{
    var list_NumberOfServings = ViewData["list_NumberOfServings"] as List<ProjectMassage_QA.Areas.Admin.Models.FW.NumberOfServings_Result>;
}

<style>
    #chartdiv {
        width: 100%;
        height: 650px;
    }

    #chartdiv2 {
        width: 100%;
        height: 650px;
    }
</style>
<script src="~/Public_QA/Admin/QA_plugins/amcharts4/core.js"></script>
<script src="~/Public_QA/Admin/QA_plugins/amcharts4/charts.js"></script>
<script src="~/Public_QA/Admin/QA_plugins/amcharts4/themes/animated.js"></script>
<script src="~/Public_QA/Admin/QA_plugins/amcharts4/themes/material.js"></script>
<script src="~/Public_QA/Admin/QA_plugins/amcharts4/themes/dataviz.js"></script>
<script>
    am4core.ready(function() {

        // Themes begin
        am4core.useTheme(am4themes_material);
        am4core.useTheme(am4themes_animated);
        // Themes end

        /**
         * Chart design taken from Samsung health app
         */
        var chartarayy =@Html.Raw(Json.Encode(ViewBag.chart));

        var chart = am4core.create("chartdiv2", am4charts.XYChart);
        chart.hiddenState.properties.opacity = 0; // this creates initial fade-in
        chart.paddingRight = 40;
        chart.data = chartarayy;

        var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
        categoryAxis.dataFields.category = "name";
        categoryAxis.renderer.grid.template.strokeOpacity = 0;
        categoryAxis.renderer.minGridDistance = 10;
        categoryAxis.renderer.labels.template.dx = -40;
        categoryAxis.renderer.minWidth = 120;
        categoryAxis.renderer.tooltip.dx = -40;

        var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
        valueAxis.renderer.inside = true;
        valueAxis.renderer.labels.template.fillOpacity = 0.3;
        valueAxis.renderer.grid.template.strokeOpacity = 0;
        valueAxis.min = 0;
        valueAxis.cursorTooltipEnabled = false;
        valueAxis.renderer.baseGrid.strokeOpacity = 0;
        valueAxis.renderer.labels.template.dy = 20;

        var series = chart.series.push(new am4charts.ColumnSeries);
        series.dataFields.valueX = "steps";
        series.dataFields.categoryY = "name";
        series.tooltipText = "{valueX.value}";
        series.tooltip.pointerOrientation = "vertical";
        series.tooltip.dy = - 30;
        series.columnsContainer.zIndex = 100;

        var columnTemplate = series.columns.template;
        columnTemplate.height = am4core.percent(50);
        columnTemplate.maxHeight = 50;
        columnTemplate.column.cornerRadius(60, 10, 60, 10);
        columnTemplate.strokeOpacity = 0;

        series.heatRules.push({ target: columnTemplate, property: "fill", dataField: "valueX", min: am4core.color("#e5dc36"), max: am4core.color("#5faa46") });
        series.mainContainer.mask = undefined;

        var cursor = new am4charts.XYCursor();
        chart.cursor = cursor;
        cursor.lineX.disabled = true;
        cursor.lineY.disabled = true;
        cursor.behavior = "none";

        var bullet = columnTemplate.createChild(am4charts.CircleBullet);
        bullet.circle.radius = 30;
        bullet.valign = "middle";
        bullet.align = "left";
        bullet.isMeasured = true;
        bullet.interactionsEnabled = false;
        bullet.horizontalCenter = "right";
        bullet.interactionsEnabled = false;

        var hoverState = bullet.states.create("hover");
        var outlineCircle = bullet.createChild(am4core.Circle);
        outlineCircle.adapter.add("radius", function (radius, target) {
            var circleBullet = target.parent;
            return circleBullet.circle.pixelRadius + 10;
        })

        var image = bullet.createChild(am4core.Image);
        image.width = 40;
        image.height = 40;
        image.horizontalCenter = "middle";
        image.verticalCenter = "middle";
        image.propertyFields.href = "href";

        image.adapter.add("mask", function (mask, target) {
            var circleBullet = target.parent;
            return circleBullet.circle;
        })

        var previousBullet;
        chart.cursor.events.on("cursorpositionchanged", function (event) {
            var dataItem = series.tooltipDataItem;

            if (dataItem.column) {
                var bullet = dataItem.column.children.getIndex(1);

                if (previousBullet && previousBullet != bullet) {
                    previousBullet.isHover = false;
                }

                if (previousBullet != bullet) {

                    var hs = bullet.states.getKey("hover");
                    hs.properties.dx = dataItem.column.pixelWidth;
                    bullet.isHover = true;

                    previousBullet = bullet;
                }
            }
        })

    }); // end am4core.ready()
</script>

<script>
    am4core.ready(function() {

        // Themes begin
        am4core.useTheme(am4themes_animated);
        // Themes end

        var chart = am4core.create("chartdiv", am4charts.XYChart);
        chart.hiddenState.properties.opacity = 0; // this creates initial fade-in
        var chartarayyy =@Html.Raw(Json.Encode(ViewBag.chartt));

        chart.data = chartarayyy;
        //chart.data = [
        //  {
        //      country: "Canada",
        //      visits: 41
        //  }
        //];

        var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());
        categoryAxis.renderer.grid.template.location = 0;
        categoryAxis.dataFields.category = "country";
        categoryAxis.renderer.minGridDistance = 40;
        categoryAxis.fontSize = 11;
        categoryAxis.renderer.labels.template.dy = 5;



        var image = new am4core.Image();
        image.horizontalCenter = "middle";
        image.width = 20;
        image.height = 20;
        image.verticalCenter = "middle";
        image.adapter.add("href", (href, target)=>{
            let category = target.dataItem.category;

        return href;
    })
    categoryAxis.dataItems.template.bullet = image;



    var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
    valueAxis.min = 0;
    valueAxis.renderer.minGridDistance = 30;
    valueAxis.renderer.baseGrid.disabled = true;


    var series = chart.series.push(new am4charts.ColumnSeries());
    series.dataFields.categoryX = "country";
    series.dataFields.valueY = "visits";
    series.columns.template.tooltipText = "{valueY.value}";
    series.columns.template.tooltipY = 0;
    series.columns.template.strokeOpacity = 0;

    // as by default columns of the same series are of the same color, we add adapter which takes colors from chart.colors color set
    series.columns.template.adapter.add("fill", function(fill, target) {
        return chart.colors.getIndex(target.dataItem.index);
    });

    }); // end am4core.ready()
</script>


<div class="card card-primary defaul_QA" style="margin-bottom:10px;">
    <div class="card-header maume" style="border-top-left-radius:0px; border-top-right-radius: 0px;">
        <h3 class="card-title">
            Thống kê
        </h3>
    </div>
    <div class="card-primary defaul_QA">
        <div class="card-body thongke white direct-chat-messages">
            <div class="row">
                <div class="col-7">
                    <h6 class="text-center mauchu">DOANH THU THÁNG</h6>
                    <div id="chartdiv"></div>
                </div>
                <div class="col-5">
                    <h6 class="text-center mauchu">TOP NHÂN VIÊN</h6>
                    <div id="chartdiv2"></div>
                </div>
            </div>
        </div>
    </div>
</div>








